#!/usr/bin/python

import argparse
import topy

parser = argparse.ArgumentParser(
    description='Filter todo list.'
)

parser.add_argument(
    '-q', '--query',
    type=str,
    action='store',
    nargs=1,
    default=[''],
    help='predicate to filter with'
)
parser.add_argument(
    '-p', '--paths',
    type=str,
    action='store',
    nargs='*',
    default=topy.lists.to_list(),
    help="paths to files containg todo list, "
         "defaults to paths stored in topy.lists "
         "(see config.py)"
)
parser.add_argument(
    '--not-colored', '-nc',
    action='store_true',
    help='not colored output'
)
parser.add_argument(
    '--markdown', '-md',
    action='store_true',
    help='print as markdown'
)
parser.add_argument(
    '--with-ids', '-ids',
    action='store_true',
    help='print with items ids'
)
parser.add_argument(
    '--html',
    action='store_true',
    help='print as html'
)
parser.add_argument(
    '--css',
    type=str,
    action='store',
    nargs=1,
    default=None,
    help="css stylesheet, only valid with --html"
    )
parser.add_argument(
    '--countdown', '-cd',
    action='store_true',
    help='print as countdown'
)
parser.add_argument(
    '--dont-indent',
    action='store_true',
    help="don't indent lines"
)
args = parser.parse_args()
tlist = topy.from_files(args.paths)
filtered = tlist.filter(args.query[0])

if args.markdown:
    print filtered.as_markdown()
elif args.html:
    print filtered.as_full_html(css_style=args.css[0])
elif args.countdown:
    print filtered.as_countdown(colored=not args.not_colored)
else:
    print filtered.as_plain_text(colored=not args.not_colored, with_ids=args.with_ids, indent=(not args.dont_indent))
